{"version":3,"file":"142.js","mappings":"udAKO,WAAKA,G,yCAAAA,C,CAAL,C,IAKA,MAEMC,EAAqB,MAFTC,EAAAA,aAIZC,EAAoB,oCACpBC,EAA0B,0CAE1BC,EAAwB,uCAExBC,EAA4B,6BAC5BC,EAAmC,2DAEnCC,EAAiB,KACjBC,EAAsB,QACtBC,EAAc,UACdC,EAAmB,aACnBC,EAAkB,aAClBC,EAAc,UACdC,EAAwB,kBACxBC,EAAa,SACbC,EAAwB,mBACxBC,EAA6B,sBAC7BC,EAAgC,0BAChCC,EAAqC,6BACrCC,EAAgB,CAAEC,IAAKZ,GAEvBa,EAAM,MACNC,EAAW,WACXC,EAAO,OACPC,EAAgB,YAChBC,EAAY,QACZC,EAAa,SACbC,EAAkB,SAElBC,EAA0B,CAErC,wBACA,6BACA,2BAEA,mBACA,uBACA,qBAEA,kCAEA,8BACA,wBACA,8BACA,0BAEWC,EAAsB,CACjC,OACA,OACA,WACA,kBACA,SACA,gBACA,yBAEWC,EAAoB,CAC/B,WACA,aACA,gBACA,kBACA,iBACA,gBACA,UACA,iBACA,WACA,iBAEWC,EAA8B,CACzC,SACA,cACA,WACA,cACA,kBACA,iBACA,oBACA,yBAGWC,EAAa,IAgBnB,MAAMC,UAAoCC,EAAAA,qB,YAC1B,4B,EAAPC,U,EADHF,G,sFAIN,MAAMG,EAAyC,CACpD,CACEC,GAAI,gBACJC,QAAS,CACPC,QAAS,uB,0FCjHf,MAAMC,GAAWC,EAAAA,EAAAA,OAAK,IAAM,iEACtBC,GAAuBD,EAAAA,EAAAA,OAAK,IAAM,0EAE3BE,EAAY,IAErB,kBAACC,EAAAA,OAAMA,KACL,kBAACC,EAAAA,MAAKA,CAACC,KAAM/C,EAAAA,GAAOgD,QAASC,QAAS,kBAACN,EAAAA,QACvC,kBAACG,EAAAA,MAAKA,CAACC,KAAM/C,EAAAA,GAAOkD,KAAMD,QAAS,kBAACR,EAAAA,QACpC,kBAACK,EAAAA,MAAKA,CAACC,KAAM,IAAKE,QAAS,kBAACE,EAAAA,SAAQA,CAACC,SAAAA,EAAQC,GAAIrD,EAAAA,GAAOgD,aCPxDM,EAAqBC,IAAAA,cAAyC,MAEpE,MAAMC,UAAYD,IAAAA,cAChBE,MAAAA,GACE,OACE,kBAACH,EAAmBI,SAAQ,CAACC,MAAOC,KAAKC,OACvC,kBAACjB,EAASA,MAGhB,EAGF,S","sources":["webpack://grafana-exploretraces-app/./utils/shared.ts","webpack://grafana-exploretraces-app/./components/Routes/Routes.tsx","webpack://grafana-exploretraces-app/./components/App/App.tsx"],"sourcesContent":["import { BusEventWithPayload, DataFrame } from '@grafana/data';\nimport pluginJson from '../plugin.json';\n\nexport type MetricFunction = 'rate' | 'errors' | 'duration';\n\nexport enum ROUTES {\n  Explore = 'explore',\n  Home = 'home',\n}\n\nexport const PLUGIN_ID = pluginJson.id;\nexport const PLUGIN_BASE_URL = `/a/${PLUGIN_ID}`;\nexport const EXPLORATIONS_ROUTE = `${PLUGIN_BASE_URL}/${ROUTES.Explore}`;\n\nexport const DATASOURCE_LS_KEY = 'grafana.explore.traces.datasource';\nexport const HOMEPAGE_FILTERS_LS_KEY = 'grafana.explore.traces.homepage.filters';\n\nexport const GRID_TEMPLATE_COLUMNS = 'repeat(auto-fit, minmax(400px, 1fr))';\n\nexport const EMPTY_STATE_ERROR_MESSAGE = 'No data for selected query';\nexport const EMPTY_STATE_ERROR_REMEDY_MESSAGE = 'Please try removing some filters or changing your query.';\n\nexport const VAR_DATASOURCE = 'ds';\nexport const VAR_DATASOURCE_EXPR = '${ds}';\nexport const VAR_FILTERS = 'filters';\nexport const VAR_FILTERS_EXPR = '${filters}';\nexport const VAR_HOME_FILTER = 'homeFilter';\nexport const VAR_GROUPBY = 'groupBy';\nexport const VAR_SPAN_LIST_COLUMNS = 'spanListColumns';\nexport const VAR_METRIC = 'metric';\nexport const VAR_LATENCY_THRESHOLD = 'latencyThreshold';\nexport const VAR_LATENCY_THRESHOLD_EXPR = '${latencyThreshold}';\nexport const VAR_LATENCY_PARTIAL_THRESHOLD = 'partialLatencyThreshold';\nexport const VAR_LATENCY_PARTIAL_THRESHOLD_EXPR = '${partialLatencyThreshold}';\nexport const explorationDS = { uid: VAR_DATASOURCE_EXPR };\n\nexport const ALL = 'All';\nexport const RESOURCE = 'Resource';\nexport const SPAN = 'Span';\nexport const RESOURCE_ATTR = 'resource.';\nexport const SPAN_ATTR = 'span.';\nexport const EVENT_ATTR = 'event.';\nexport const EVENT_INTRINSIC = 'event:';\n\nexport const radioAttributesResource = [\n  // https://opentelemetry.io/docs/specs/semconv/resource/\n  'resource.service.name',\n  'resource.service.namespace',\n  'resource.service.version',\n  // custom\n  'resource.cluster',\n  'resource.environment',\n  'resource.namespace',\n  // https://opentelemetry.io/docs/specs/semconv/resource/deployment-environment/\n  'resource.deployment.environment',\n  // https://opentelemetry.io/docs/specs/semconv/resource/k8s/\n  'resource.k8s.namespace.name',\n  'resource.k8s.pod.name',\n  'resource.k8s.container.name',\n  'resource.k8s.node.name',\n];\nexport const radioAttributesSpan = [\n  'name',\n  'kind',\n  'rootName',\n  'rootServiceName',\n  'status',\n  'statusMessage',\n  'span.http.status_code',\n];\nexport const ignoredAttributes = [\n  'duration',\n  'event:name',\n  'nestedSetLeft',\n  'nestedSetParent',\n  'nestedSetRight',\n  'span:duration',\n  'span:id',\n  'trace:duration',\n  'trace:id',\n  'traceDuration',\n];\nexport const ignoredAttributesHomeFilter = [\n  'status',\n  'span:status',\n  'rootName', \n  'rootService',\n  'rootServiceName', \n  'trace:rootName', \n  'trace:rootService',\n  'trace:rootServiceName'\n];\n// Limit maximum options in select dropdowns for performance reasons\nexport const maxOptions = 1000;\n\nexport type MakeOptional<T, K extends keyof T> = Pick<Partial<T>, K> & Omit<T, K>;\n\nexport interface ComparisonSelection {\n  type: 'auto' | 'manual';\n  raw?: { x: { from: number; to: number }; y: { from: number; to: number } };\n  timeRange?: { from: number; to: number };\n  duration?: { from: string; to: string };\n  query?: string;\n}\n\nexport interface EventTimeseriesDataReceivedPayload {\n  series?: DataFrame[];\n}\n\nexport class EventTimeseriesDataReceived extends BusEventWithPayload<EventTimeseriesDataReceivedPayload> {\n  public static type = 'timeseries-data-received';\n}\n\nexport const filterStreamingProgressTransformations = [\n  {\n    id: 'filterByRefId',\n    options: {\n      exclude: 'streaming-progress',\n    },\n  },\n];\n","import React, { lazy } from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { ROUTES } from 'utils/shared';\n\nconst HomePage = lazy(() => import('../../pages/Home/HomePage'));\nconst TraceExplorationPage = lazy(() => import('../../pages/Explore/TraceExplorationPage'));\n\nexport const AppRoutes = () => {\n  return (\n    <Routes>\n      <Route path={ROUTES.Explore} element={<TraceExplorationPage />} />\n      <Route path={ROUTES.Home} element={<HomePage />} />\n      <Route path={'/'} element={<Navigate replace to={ROUTES.Explore} />} />\n    </Routes>\n  );\n};\n","import React from 'react';\nimport { AppRootProps } from '@grafana/data';\nimport { AppRoutes } from '../Routes';\n\n// This is used to be able to retrieve the root plugin props anywhere inside the app.\nconst PluginPropsContext = React.createContext<AppRootProps | null>(null);\n\nclass App extends React.PureComponent<AppRootProps> {\n  render() {\n    return (\n      <PluginPropsContext.Provider value={this.props}>\n        <AppRoutes />\n      </PluginPropsContext.Provider>\n    );\n  }\n}\n\nexport default App;\n"],"names":["ROUTES","EXPLORATIONS_ROUTE","pluginJson","DATASOURCE_LS_KEY","HOMEPAGE_FILTERS_LS_KEY","GRID_TEMPLATE_COLUMNS","EMPTY_STATE_ERROR_MESSAGE","EMPTY_STATE_ERROR_REMEDY_MESSAGE","VAR_DATASOURCE","VAR_DATASOURCE_EXPR","VAR_FILTERS","VAR_FILTERS_EXPR","VAR_HOME_FILTER","VAR_GROUPBY","VAR_SPAN_LIST_COLUMNS","VAR_METRIC","VAR_LATENCY_THRESHOLD","VAR_LATENCY_THRESHOLD_EXPR","VAR_LATENCY_PARTIAL_THRESHOLD","VAR_LATENCY_PARTIAL_THRESHOLD_EXPR","explorationDS","uid","ALL","RESOURCE","SPAN","RESOURCE_ATTR","SPAN_ATTR","EVENT_ATTR","EVENT_INTRINSIC","radioAttributesResource","radioAttributesSpan","ignoredAttributes","ignoredAttributesHomeFilter","maxOptions","EventTimeseriesDataReceived","BusEventWithPayload","type","filterStreamingProgressTransformations","id","options","exclude","HomePage","lazy","TraceExplorationPage","AppRoutes","Routes","Route","path","Explore","element","Home","Navigate","replace","to","PluginPropsContext","React","App","render","Provider","value","this","props"],"sourceRoot":""}