services:
  # Level 3 Site Operations Services
  ftp_server:
    image: delfer/alpine-ftp-server:latest
    container_name: ftp_server
    cap_add:
      - NET_ADMIN
    environment:
      USERS: "frp_user|alpine_fun_password123!"
    networks:
      site_operations_network:
        ipv4_address: 192.168.30.2
    entrypoint: [ "/bin/sh", "-c", "sleep infinity" ]

  # This database holds the data collected from the industrial operations and is then moved to the Historian DB in the Enterprise Network
  historian-db:
    image: influxdb:latest
    container_name: historian-db
    cap_add:
      - NET_ADMIN
    env_file:
      - ./historian.env
    volumes:
      - historian_data:/var/lib/influxdb2:rw
    networks:
      site_operations_network:
        ipv4_address: 192.168.30.3
    ports:
      - 8087:8086
    entrypoint: [ "./entrypoint.sh" ]
    # entrypoint: [ "/bin/sh", "-c", "sleep infinity" ]

  historian-client:
    image: ubuntu:latest
    stdin_open: true
    tty: true
    container_name: historian-client
    cap_add:
      - NET_ADMIN
    depends_on:
      - historian-db
    networks:
      site_operations_network:
        ipv4_address: 192.168.30.4

  historian-server:
    build:
      context: ./site_operations
      dockerfile: DockerFile
    container_name: historian-server
    cap_add:
      - NET_ADMIN
    networks:
      site_operations_network:
        ipv4_address: 192.168.30.5
    depends_on:
      - historian-db
    ports:
      - "8001:5000"

  vds:
    image: dorowu/ubuntu-desktop-lxde-vnc # Prebuilt lightweight Ubuntu Desktop that has 4 virtual desktops
    container_name: vds
    cap_add:
      - NET_ADMIN
    restart: unless-stopped
    ports:
      - "5901:5901" # VNC Access
      - "8088:80" # Web-based noVNC Access
    environment:
      - VNC_PASSWORD=securepassword
    networks:
      site_operations_network:
        ipv4_address: 192.168.30.6
        
  # Assembly Enclave Services
  openplc_hmi:
    build:
      context: ./industrial_component/hmi
      dockerfile: Dockerfile
    stdin_open: true
    tty: true
    entrypoint: [ "gunicorn", "app:app", "-b", "0.0.0.0:5000" ]
    container_name: openplc_hmi
    cap_add:
      - NET_ADMIN
    volumes:
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    ports:
      - "5005:5000"
    networks:
      assembly_network:
        ipv4_address: 192.168.31.2

  tcp_modbus:
    container_name: tcp_modbus_server
    build:
      context: ./industrial_component/tcp_modbus
      dockerfile: Dockerfile
    # depends_on:
    #   - openplc
    stdin_open: true
    tty: true
    cap_add:
      - NET_ADMIN
    ports:
      - "502:502"
    networks:
      assembly_network:
        ipv4_address: 192.168.31.3
    # entrypoint: [ "/bin/sh", "-c", "sleep infinity" ]

  openplc:
    build:
      context: .
      dockerfile: industrial_component/openplc/Dockerfile
    stdin_open: true
    tty: true
    cap_add:
      - NET_ADMIN
    container_name: openplc
    volumes:
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
      - openplc_data:/home
    ports:
      - "8080:8080"
      - "503:502"
    networks:
      assembly_network:
        ipv4_address: 192.168.31.4
    # entrypoint: ["/bin/sh", "-c", "sleep infinity"]

  mqtt_broker:
    image: eclipse-mosquitto
    container_name: mqtt_broker
    networks:
      assembly_network:
        ipv4_address: 192.168.31.5
    cap_add:
      - NET_ADMIN
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mqtt/config:/mosquitto/config # loads the mosquitto config file
      # - ./mqtt/data:/mosquitto/data # If you enable persistence true in mosquitto.conf, this is where message queues and subscriptions are stored across restarts.
      - ./mqtt/log:/mosquitto/log # can be used for logging MQTT connect/disconnect messages

  node_red:
    image: nodered/node-red
    container_name: node_red
    cap_add:
      - NET_ADMIN
    networks:
      assembly_network:
        ipv4_address: 192.168.31.6
    ports:
      - "1880:1880"
    volumes:
      - ./node-red/data:/data # Saves Node-RED flows, custom nodes, credentials and project settings to the project
    depends_on:
      - mqtt_broker

  # Utilities Enclave Services
  scadalts:
    image: scadalts/scadalts:latest
    cap_add:
      - NET_ADMIN
    environment:
      - CATALINA_OPTS=-Xmx2G -Xms2G
      - JAVA_OPTS=-Dlogback.configurationFile=/usr/local/tomcat/lib/logback.xml 
    ports:
      - "0.0.0.0:8082:8080"
    depends_on:
      - database
    expose: [ "8080" ]
    volumes:
      - ./tomcat_log:/usr/local/tomcat/logs:rw
      - ./scada/logback.xml:/usr/local/tomcat/lib/logback.xml:rw
      - scada_databases:/var/lib/mysql
      - ./scada/base_scada_data.json:/usr/local/tomcat/conf/base_scada_data.json:rw
    links:
      - database:database
    command:
      - /usr/bin/wait-for-it
      - --host=database
      - --port=3306
      - --timeout=30
      - --strict
      - --
      - /usr/local/tomcat/bin/catalina.sh
      - run
    networks:
      utilities_network:
        ipv4_address: 192.168.32.2

  database:
    container_name: mysql_database
    image: mysql/mysql-server:8.0.32
    cap_add:
      - NET_ADMIN
    ports:
      - "0.0.0.0:3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=root
      - MYSQL_PASSWORD=root
      - MYSQL_DATABASE=scadalts
    expose: [ "3307" ]
    # volumes:
    #   - ./db_data:/var/lib/mysql:rw
    #   - ./db_conf:/etc/mysql:ro
    command: --log_bin_trust_function_creators=1
    networks:
      utilities_network:
        ipv4_address: 192.168.32.3

  bacnet_server:
    build:
      context: ./bacnet_server
      dockerfile: Dockerfile
    container_name: bacnet_server
    cap_add:
      - NET_ADMIN
    networks:
      utilities_network:
        ipv4_address: 192.168.32.4
    ports:
      - "47808:47808/udp" # BACnet
      - "8025:8025" # Flask

  opc_ua_server:
    image: open62541/open62541:latest
    container_name: opc_ua_server
    cap_add:
      - NET_ADMIN
    ports:
      - "4840:4840" # OPC UA default port
    environment:
      - OPCUA_SERVER_NAME=Utilities_Server
      - OPCUA_NAMESPACE_URI=http://example.com/opcua
    networks:
      utilities_network:
        ipv4_address: 192.168.32.5

  # Packaging Enclave Services
  barcode_scanner:
    container_name: barcode_scanner
    cap_add:
      - NET_ADMIN
    build:
      context: ./barcode_scanner
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    restart: always
    networks:
      packaging_network:
        ipv4_address: 192.168.33.2

  rfid_database:
    image: rfidapp/rfid-app-database
    container_name: rfid_database
    cap_add:
      - NET_ADMIN
    networks:
      packaging_network:
        ipv4_address: 192.168.33.3

  inventory_db:
    image: mysql/mysql-server:8.0
    container_name: inventory_db
    cap_add:
      - NET_ADMIN
    environment:
      MYSQL_ROOT_PASSWORD: inventory_pass
    networks:
      packaging_network:
        ipv4_address: 192.168.33.4

  inventory_client:
    image: ubuntu:latest
    container_name: inventory_client
    cap_add:
      - NET_ADMIN
    stdin_open: true
    tty: true
    depends_on:
      - inventory_db
    networks:
      packaging_network:
        ipv4_address: 192.168.33.5

networks:
  assembly_network:
    external: true
  utilities_network:
    external: true
  packaging_network:
    external: true
  site_operations_network:
    external: true

volumes:
  openplc_data:
  scada_databases:
  logs:
  historian_data:
